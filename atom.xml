<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>happylzyy&#39;s Blog</title>
  
  
  <link href="http://happylzyy.github.io/atom.xml" rel="self"/>
  
  <link href="http://happylzyy.github.io/"/>
  <updated>2024-08-09T14:23:50.488Z</updated>
  <id>http://happylzyy.github.io/</id>
  
  <author>
    <name>happylzyy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How to enable both secure boot and LUKS with TPM</title>
    <link href="http://happylzyy.github.io/2024/08/09/enable-secure-boot-and-luks-tpm/"/>
    <id>http://happylzyy.github.io/2024/08/09/enable-secure-boot-and-luks-tpm/</id>
    <published>2024-08-09T14:16:24.000Z</published>
    <updated>2024-08-09T14:23:50.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="secure-boot-and-luks-tpm">Secure Boot and LUKS TPM</h2><h3 id="prepare">Prepare</h3><p>Install all packages we need</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S sbctl tpm2-tss tpm2-tools</span><br></pre></td></tr></table></figure><p>follow this <ahref="https://happylzyy.github.io/2023/10/01/how-to-enable-secureboot-on-manjaro/">guideline</a>, generate Machine Own Key and enroll it into the EFI variables.</p><h3 id="install-bootloader">Install bootloader</h3><p>this section changes bootloader from grub to systemd-boot, becausegrub has not support to LUKSv2.</p><p>Change esp partition mount point from <code>/boot/efi</code> to<code>/efi</code> permanently. If the esp mount point remains unchanged,grub packages should be removed.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">umount /boot/efi</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p /efi</span><br><span class="line"><span class="built_in">sudo</span> sed -i <span class="string">&#x27;s/\/boot\/efi/\/efi/g&#x27;</span> /etc/fstab</span><br><span class="line">mount -a</span><br></pre></td></tr></table></figure><p>Delete old boot entry and install new bootloader</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">OLD_MANJARO=<span class="string">&quot;<span class="subst">$(efibootmgr | grep <span class="string">&quot;manjaro&quot;</span> | cut -d&#x27; &#x27; -f1 | cut -c 5-8)</span>&quot;</span> <span class="comment"># Manjaro is old boot entry name</span></span><br><span class="line">efibootgmr -b <span class="string">&quot;<span class="variable">$&#123;OLD_MANJARO&#125;</span>&quot;</span> -B <span class="comment"># delete old boot entry</span></span><br><span class="line">bootctl install &amp;&amp; systemctl <span class="built_in">enable</span> systemd-boot-update.service <span class="comment"># install systemd-boot</span></span><br></pre></td></tr></table></figure><p>After installation, it should be a new boot entry "Linux BootManager" appeared in the UEFI boot menu.</p><p>Open <code>/boot/efi/loader/loader.conf</code> and add there<code>default @saved</code>. This will make systemd-boot select yourpreviously booted kernel by default. Another useful change is setting<code>timeout</code> to 1 or 2, most likely that’s long enough period tosee bootloader’s menu and stop countdown if needed.</p><h3 id="configure-initramfs">Configure initramfs</h3><h4 id="mkinitcpio.conf">mkinitcpio.conf</h4><p>Replace HOOKS array in <code>/etc/mkinitcpio.conf</code> and save oldones commented in the end of the file just in case:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OLD_HOOKS=$(<span class="built_in">cat</span> /etc/mkinitcpio.conf | grep <span class="string">&quot;^HOOKS=(&quot;</span>)</span><br><span class="line">sed -i <span class="string">&#x27;s|&#x27;</span><span class="string">&quot;<span class="variable">$&#123;OLD_HOOKS&#125;</span>&quot;</span><span class="string">&#x27;|HOOKS=(base systemd autodetect modconf kms keyboard sd-vconsole sd-encrypt block filesystems fsck)|&#x27;</span> /etc/mkinitcpio.conf &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;#previous_&#x27;</span><span class="variable">$OLD_HOOKS</span> |<span class="built_in">tee</span> -a /etc/mkinitcpio.conf</span><br></pre></td></tr></table></figure><p>Also for better (de)compression speed/efficiency ratio considersetting <code>COMPRESSION="zstd"</code> in your<code>/etc/mkinitcpio.conf</code> if not set already. Note though thatthis works only starting from linux 5.10.</p><h4 id="crypttab.initramfs">crypttab.initramfs</h4><p>Do the following to add entry about LUKS partition tocrypttab.initramfs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UUID=$(<span class="built_in">sudo</span> blkid -s UUID -o value /dev/nvme0n1p5)</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">echo</span> luks-<span class="variable">$UUID</span> UUID=<span class="variable">$UUID</span> none tpm2-device=auto &gt; /etc/crypttab.initramfs</span><br></pre></td></tr></table></figure><h4 id="cmdline">cmdline</h4><p>Create <code>cmdline</code> with the current boot parameters of thesystem</p><p>Optionally, <code>/etc/cmdline.d</code> can be used for more flexibleconfiguration.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/cmdline &gt; /etc/kernel/cmdline</span><br></pre></td></tr></table></figure><h4 id="linux.preset">linux.preset</h4><p>Open preset file for the current kernel in<code>/etc/mkinitcpio.d</code>, such as <code>linux66.preset</code>.</p><p>Make changes following line :</p><ul><li>uncomment <code>default_uki</code> <code>fallback_uki</code><code>default_options</code></li><li>comment <code>default_image</code> <code>fallback_image</code></li><li>make sure the appropriate mount point of the esp in the ukipath</li></ul><h4 id="build-uki">build UKI</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mkinitcpio -P</span><br></pre></td></tr></table></figure><p>After building, there should be several UKI images in<code>/boot/efi/EFI/Linux</code>. Optionally, we can remove old imagesunused under <code>/boot</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /boot/initramfs*</span><br></pre></td></tr></table></figure><p>if warning about <code>consolefont</code> appears during buildprocess, create vconsole.conf and build again.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;KEYMAP=us\nFONT=tcvn8x16&quot;</span> &gt; /etc/vconsole.conf</span><br></pre></td></tr></table></figure><h3 id="secure-boot">Secure Boot</h3><p>sbctl is a tool that generates signed and thus trusted images used toboot system.</p><p>Create a new script <code>sbsign-all</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ./sbsign-all</span><br></pre></td></tr></table></figure><p>Write following code in this script and save</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">efidir=<span class="string">&quot;/boot/efi&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># UKI sign</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> <span class="variable">$&#123;efidir&#125;</span>/EFI/Linux/*.efi; <span class="keyword">do</span> /usr/bin/sbctl sign -s <span class="variable">$file</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># system-boot sign</span></span><br><span class="line">/usr/bin/sbctl sign -s -o /usr/lib/systemd/boot/efi/systemd-bootx64.efi.signed /usr/lib/systemd/boot/efi/systemd-bootx64.efi</span><br><span class="line"></span><br><span class="line"><span class="comment"># kernel sign</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> /boot/vmlinuz*; <span class="keyword">do</span> /usr/bin/sbctl sign -s <span class="variable">$file</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>change permission for excutation</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> a+x ./sbsign-all</span><br></pre></td></tr></table></figure><p>then run the script.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> ./sbsign-all</span><br></pre></td></tr></table></figure><p>Benefit from mkinitcpio hook and pacman hook, the sign process willrun automatically when system upgrade or modified.</p><p>After all steps above, reboot and enter UEFI setup menu, set SecureBoot ON, exit saving setting, check if the system can boot normally.</p><h3 id="unlock-luks-via-tpm">Unlock LUKS via TPM</h3><p>The manjaro installation use LUKSv1 for the default crypt solution,but our plan only support LUKSv2. So we need convert LUKS beforeconfiguring TPM.</p><p>Insert the manjaro installation U-disk into the computer, enter liveCD environment. if it is prohibited by secure policy, disable secureboot mode temporarily.</p><p>Open a terminal, run following command.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cryptsetup convert --type luks2 /dev/nvme0n1p5</span><br></pre></td></tr></table></figure><p>reboot and enable secure boot mode again.</p><p>Before sealing LUKS key into TPM, check command <code>bootctl</code>,following condition should be satisfied:</p><ul><li><p>system booted by systemd-boot bootloader</p></li><li><p>system booted in secure boot mode</p></li></ul><p>If the conditions are satisfied, check the cryptsetup status:</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> cryptsetup luksDump /dev/nvme0n1p5</span><br></pre></td></tr></table></figure></p><p>Normally it should have 1 or 2 keyslots already occupied, the firstone is passphrase we set, the other is probably<code>/crypto_keyfile.bin</code>, and no tokens in place (yet). wesuggest remove slot 1 if it’s occupied by <code>crypto_keyfile</code> atthe moment (since it’s not safe to use crypto_keyfile in configurationwe’re building).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> cryptsetup luksKillSlot /dev/nvme0n1p5 1</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /crypto_keyfile.bin</span><br></pre></td></tr></table></figure><p>Then seal the LUKS key into TPM with PCR 7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemd-cryptenroll /dev/nvme0n1p5 --tpm2-device=auto --tpm2-pcrs=7</span><br></pre></td></tr></table></figure><h3 id="references">References</h3><ol type="1"><li>https://forum.manjaro.org/t/howto-using-secure-boot-and-tpm2-to-unlock-luks-partition-on-boot/101626</li><li>https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface/Secure_Boot#</li><li>https://wiki.archlinux.org/title/Unified_kernel_image</li><li>https://wiki.archlinux.org/title/Trusted_Platform_Module</li><li>https://wiki.archlinux.org/title/Systemd-cryptenroll#Trusted_Platform_Module</li><li>https://wiki.archlinux.org/title/Dm-crypt/System_configuration#Using_systemd-cryptsetup-generator</li><li>https://wiki.archlinux.org/title/Dm-crypt/System_configuration#Examples</li><li>https://wiki.archlinux.org/title/Dm-crypt/System_configuration#Trusted_Platform_Module_and_FIDO2_keys</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;secure-boot-and-luks-tpm&quot;&gt;Secure Boot and LUKS TPM&lt;/h2&gt;
&lt;h3 id=&quot;prepare&quot;&gt;Prepare&lt;/h3&gt;
&lt;p&gt;Install all packages we need&lt;/p&gt;
&lt;figure cl</summary>
      
    
    
    
    
    <category term="manjaro" scheme="http://happylzyy.github.io/tags/manjaro/"/>
    
    <category term="linux" scheme="http://happylzyy.github.io/tags/linux/"/>
    
    <category term="secureboot" scheme="http://happylzyy.github.io/tags/secureboot/"/>
    
    <category term="luks" scheme="http://happylzyy.github.io/tags/luks/"/>
    
    <category term="tpm" scheme="http://happylzyy.github.io/tags/tpm/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro Linux Reinstall Record</title>
    <link href="http://happylzyy.github.io/2024/03/07/manjaro-linux-install-record/"/>
    <id>http://happylzyy.github.io/2024/03/07/manjaro-linux-install-record/</id>
    <published>2024-03-07T13:37:48.000Z</published>
    <updated>2024-08-09T14:23:02.944Z</updated>
    
    <content type="html"><![CDATA[<h1 id="manjaro-linux-setup">Manjaro Linux Setup</h1><h2 id="install">Install</h2><ol type="1"><li>partition <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">NAME                                          MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINTS</span><br><span class="line">nvme0n1                                       259:0    0 931.5G  0 disk</span><br><span class="line">├─nvme0n1p1                                   259:1    0   400M  0 part  /boot/efi</span><br><span class="line">...</span><br><span class="line">├─nvme0n1p5                                   259:5    0   258G  0 part</span><br><span class="line">│ └─luks-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx 254:0    0   258G  0 crypt /</span><br><span class="line">...</span><br></pre></td></tr></table></figure> esp partition <code>nvme0n1p1</code> mounton <code>\boot\efi</code>, while the root system installed on cryptedpartition <code>nvme0n1p5</code> with LUKSv1. <strong>Replace blocknames according to actual situation of your computer</strong>.</li></ol><h2 id="system-modification">System modification</h2><p>Before start, make an upgrade for the whole system.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -Syu</span><br></pre></td></tr></table></figure><h3 id="repository">Repository</h3><ul><li>Change server location: <strong>China</strong></li><li>Add <strong>archlinuxcn</strong> Repository at the end of file.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">echo</span> &gt;&gt; /etc/pacman.conf <span class="string">&quot;</span></span><br><span class="line"><span class="string">[archlinuxcn]</span></span><br><span class="line"><span class="string">Server = https://mirrors.ustc.edu.cn/archlinuxcn/<span class="variable">$arch</span></span></span><br><span class="line"><span class="string">&quot;</span></span><br></pre></td></tr></table></figure></li><li>Enable <strong>flatpak</strong> and <strong>AUR</strong> in "Add /Remove Software" setting.</li><li>Install <strong>yay</strong> tool for more comfortable packagemanagement experience. <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S yay</span><br></pre></td></tr></table></figure></li></ul><h3 id="shell">Shell</h3><ul><li><p>Install <code>oh-my-zsh-git</code> from archlinuxcn repositorywith the latest code. <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S archlinuxcn/oh-my-zsh-git</span><br></pre></td></tr></table></figure> After installing the package, copy<code>.zshrc</code> from system to home directory. <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/share/oh-my-zsh/zshrc ~/.zshrc</span><br></pre></td></tr></table></figure> Add thefollowing code to the end of <code>.zshrc</code> for original manjaroshell experience. <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use powerline</span></span><br><span class="line">USE_POWERLINE=<span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="comment"># Source manjaro-zsh-configuration</span></span><br><span class="line"><span class="keyword">if</span> [[ -e /usr/share/zsh/manjaro-zsh-config ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">source</span> /usr/share/zsh/manjaro-zsh-config</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># Use manjaro zsh prompt</span></span><br><span class="line"><span class="keyword">if</span> [[ -e /usr/share/zsh/manjaro-zsh-prompt ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">source</span> /usr/share/zsh/manjaro-zsh-prompt</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure> At last, make some small modification,install <strong>autojump</strong> plugin. <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S autojump</span><br></pre></td></tr></table></figure> modify the.zshrc file. <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins=(git autojump)</span><br></pre></td></tr></table></figure> then, change shell to zsh.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure></p></li><li><p>sudo without password add this line at the end of file<code>/etc/sudoers.d/10-installer</code></p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">echo</span> %wheel ALL=(ALL:ALL) NOPASSWD: ALL &gt;&gt; /etc/sudoers.d/10-installer</span><br></pre></td></tr></table></figure></p></li></ul><h3 id="gpu-switch">GPU Switch</h3><p>Use <strong>envycontrol</strong> to switch intel, nvidia, and hybridmode.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S envycontrol</span><br></pre></td></tr></table></figure><p>In addition, a kde plasma5 widget can be convenient.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S plasma5-applets-optimus-gpu-switcher</span><br></pre></td></tr></table></figure><h3 id="fonts">Fonts</h3><p>Install several fonts both in Latin and Chinese.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S wqy-microhei-lite wqy-bitmapfont wqy-microhei wqy-zenhei ttf-roboto adobe-source-han-sans-cn-fonts adobe-source-han-serif-cn-fonts</span><br></pre></td></tr></table></figure><p>Install <code>ttf-apple-emoji</code> to replace original<code>noto-fonts-emoji</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S ttf-apple-emoji</span><br></pre></td></tr></table></figure><p>Make system custom font configuration to enable apple color emoji andchange preferred Chinese fonts.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo touch /etc/fonts/local.conf</span><br><span class="line">sudo vim /etc/fonts/local.conf</span><br></pre></td></tr></table></figure><p>Paste following code into <code>local.conf</code>.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">fontconfig</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;fonts.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fontconfig</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>sans-serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Sans<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>Apple Color Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>DejaVu Sans<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>Source Han Sans CN<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">prefer</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">family</span>&gt;</span>serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>Apple Color Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>DejaVu Serif<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>Source Han Serif CN<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="name">alias</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">family</span>&gt;</span>monospace<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">prefer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Mono<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">family</span>&gt;</span>Apple Color Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">family</span>&gt;</span>Noto Emoji<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">family</span>&gt;</span>DejaVu Sans Mono<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">family</span>&gt;</span>WenQuanYi Micro Hei Mono<span class="tag">&lt;/<span class="name">family</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">prefer</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">alias</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fontconfig</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="command">Command</h3><p>Install some very useful and common tools.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S zip net-tools base-devel nmap vulscan python-pypandoc</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S cowsay xcowsay sl asciiquarium fortune-mod cmatrix oneko toilet lolcat</span><br></pre></td></tr></table></figure><h3 id="appearance">Appearance</h3><p>Install <strong>latte dock</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S latte-dock</span><br></pre></td></tr></table></figure><p>Change the desktop layout:</p><ul><li>move panel from bottom to top;</li><li>add widgets into panel: Application Launcher, Global menu, PanelSpacer, Network speed, CatWalk, System tray, Pager, Digital clock, Peekat Desktop.</li><li>add latte dock at bottom of desktop with widgets: ApplicationDashboard, Latte Tasks, Trashcan, Analog clock.</li><li>add a weather widget right side the desktop.</li></ul><p>For widgets configuration, CatWalk idle threshold is 30%, weatherlocation is Tianjin, China. For latte dock, Items absolute size is56px., zoom on hover is 10%, background size is 14%, and Opacity is52%.</p><h3 id="swapfile">swapfile</h3><p>The system has no swap partition after default installation process,for the full suspend and hibernation function experience, we setup swapmanually.</p><p>Create a swap file matched the physical memory and set properpermissions.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> fallocate -l 8G /.swapfile <span class="comment"># create a hide swapfile on root /</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 600 /.swapfile</span><br></pre></td></tr></table></figure><p>Enable and open swap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mkswap /.swapfile</span><br><span class="line"><span class="built_in">sudo</span> swapon /.swapfile</span><br></pre></td></tr></table></figure><p>Insert swap info into fstab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">echo</span> <span class="string">&quot;/.swapfile none swap defaults 0 0&quot;</span> &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><p>Reboot and check if the swap on</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">swapon</span><br><span class="line">NAME       TYPE SIZE USED PRIO</span><br><span class="line">/.swapfile file   8G   0B   -2</span><br></pre></td></tr></table></figure><h3 id="samba">Samba</h3><p>In Dolphin, the property share tab is unavailable because of sambaservice broken. Now we fix it.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">yay -S samba</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">touch</span> /etc/samba/smb.conf</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p /var/lib/samba/usershares</span><br><span class="line"><span class="built_in">sudo</span> groupadd sambashares -U [username]</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> [username]:sambashares /var/lib/samba/usershares</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 1770 /var/lib/samba/usershares</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> smb.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># Optionally, for accessible via NetBIOS host name</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> nmb.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># Optionally, for discoverable by most non-Windows file managers</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> avahi-daemon.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># Optionally, for discoverable by Windows, wsdd service required </span></span><br><span class="line">yay -S wsdd</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> wsdd.service</span><br></pre></td></tr></table></figure><p>Add following text into smb.conf (in order to prevent bugs, add ablank line at the end of file.)</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line">        usershare <span class="attr">path</span> = /var/lib/samba/usershares</span><br><span class="line">        usershare max <span class="attr">shares</span> = <span class="number">100</span></span><br><span class="line">        usershare allow <span class="attr">guests</span> = <span class="literal">yes</span></span><br><span class="line">        usershare owner <span class="attr">only</span> = <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>then reboot.</p><p><strong>Attention</strong>: it seems like there are many bugs inproperty share tab.</p><h3 id="firewall">Firewall</h3><p>A Firewall and Firewall GUI manager is optional for networkusing.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yay -S firewalld</span><br><span class="line">sudo systemctl enable firewalld.service</span><br><span class="line">sudo systemctl start firewalld.service</span><br></pre></td></tr></table></figure><h3 id="ssd-trim">SSD trim</h3><p>Trim is referred to discard unused blocks on the SSD. Trim onencrypted device has specific security risks, but for most users, thebenefit of TRIM outweigh those security concerns.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> cryptsetup --allow-discards --persistent refresh luks-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</span><br><span class="line"><span class="built_in">sudo</span> fstrim -a -v</span><br></pre></td></tr></table></figure><h3 id="java-environment">Java environment</h3><p>In order to run jar application such as minecraft, Java environmentis required. we can install OpenJDK environment with JavaFX support.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S aur/java-openjfx <span class="comment"># jre and jdk will be installed as dependencies automatically</span></span><br></pre></td></tr></table></figure><h3 id="section"></h3><h2 id="install-and-config-application">Install and configapplication</h2><h3 id="git">git</h3><p>add lfs support</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S git-lfs</span><br></pre></td></tr></table></figure><p>config username and e-mail.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;My Name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;myemail@example.com&quot;</span></span><br></pre></td></tr></table></figure><h3 id="internet-technology">Internet Technology</h3><p>there are many useful packages in repository.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S archlinuxcn/*****-verge-rev-bin watt-toolkit-bin</span><br></pre></td></tr></table></figure><h3 id="fcitx5-and-rime">fcitx5 and rime</h3><p>Install <strong>fcitx5</strong> bundle including 4 packages:</p><ol type="1"><li>fcitx5 2) fcitx5-configtool 3) fcitx5-gtk 4) fcitx5-qt</li></ol><p>and other extra packages</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S fcitx5-im fcitx5-lua kcm-fcitx5 fcitx5-rime fcitx5-chinese-addons libime manjaro-asian-input-support-fcitx5 rime-symbols</span><br></pre></td></tr></table></figure><p>then reboot to apply modify.</p><p>clone <strong>clover_flypinyin</strong> to local</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/happylzyy/rime-cloverpinyin.git</span><br></pre></td></tr></table></figure><p>follow the <code>README.md</code> to build the package.</p><p>extract package to <code>/usr/share/rime-data</code> and replaceexsiting file.</p><p>create a config file in <code>~/.local/share/fcitx5/rime</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> default.custom.yaml</span><br></pre></td></tr></table></figure><p>and write</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">patch:</span></span><br><span class="line">  <span class="attr">&quot;menu/page_size&quot;:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">schema_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">schema:</span> <span class="string">clover_flypy</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">schema:</span> <span class="string">clover</span></span><br></pre></td></tr></table></figure><p>restart the rime engine.</p><h3 id="apparmor">apparmor</h3><p>install apparmor utils and enable the service.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yay -S apparmor</span><br><span class="line">systemctl <span class="built_in">enable</span> apparmor.service</span><br></pre></td></tr></table></figure><p>Add kernel cmdline as follows. This section is not suitable for grubbut for UKI.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /etc/cmdline.d</span><br><span class="line"><span class="built_in">touch</span> /etc/cmdline.d/security.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enable apparmor</span></span><br><span class="line">lsm=landlock,lockdown,yama,integrity,apparmor,bpf audit=1 audit_backlog_limit=256</span><br></pre></td></tr></table></figure><h3 id="vim">vim</h3><p>install <strong>gvim</strong> via yay tool.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S gvim</span><br></pre></td></tr></table></figure><p>clone the vim config to .vim folder. <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/.vim &amp;&amp; <span class="built_in">cd</span> ~/.vim</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/happylzyy/vim-init.git</span><br><span class="line"><span class="built_in">cd</span> vim-init &amp;&amp; git checkout linux</span><br></pre></td></tr></table></figure> create a new file<code>.vimrc' in home directory and add following code <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">source</span> ~/.vim/vim-init/init.vim &gt; .vimrc</span><br></pre></td></tr></table></figure> open vim, type</code>:PluginInstall`to fix missing plugins via internet.</p><h3 id="typora">typora</h3><p>the last free version of typora is 0.11.18(beta), we can build it byusing AUR PKGBUILD.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S aur/typora-free</span><br></pre></td></tr></table></figure><h3 id="albert">albert</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S archlinuxcn/albert</span><br></pre></td></tr></table></figure><p>Open System Setting -&gt; Startup and Shutdown-&gt;Autostart, addalbert in autorun list.</p><p><strong>Attention</strong>: albert has no wayland support yet.</p><h3 id="wps">WPS</h3><p>Install wps and all dependencies including chinese language support,font packages, and several fix patch, etc.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S wps-office wps-office-all-dicts-win-languages wps-office-mui-zh-cn wps-office-mime-cn wps-office-fonts wps-office-bwrap freetype2-wps ttf-wps-fonts ttf-ms-fonts</span><br></pre></td></tr></table></figure><p>install bug fix <ahref="https://aur.archlinux.org/packages/libtiff5/">libtiff5</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S libtiff5</span><br></pre></td></tr></table></figure><h3 id="gimp">GIMP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S gimp</span><br></pre></td></tr></table></figure><p>Make GIMP Look Like Photoshop, follow the <ahref="https://github.com/Diolinux/PhotoGIMP">PhotoGIMP</a> project.</p><h3 id="node.js">Node.js</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S nodejs npm</span><br></pre></td></tr></table></figure><p>configure local repository</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmmirror.com/</span><br></pre></td></tr></table></figure><h3 id="onedrive">OneDrive</h3><p>As some files synced on onedrive, we install onedriver and createsome links</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yay -S onedrive-abraunegg onedrivegui</span><br><span class="line"><span class="comment"># Seting onedrive at ~/OneDrive in the onedrivegui app</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ln</span> -s ~/OneDrive/Sync/Minecraft/server ./server</span><br><span class="line"><span class="built_in">ln</span> -s ~/OneDrive/Sync/Calibre ./Calibre</span><br><span class="line"><span class="built_in">ln</span> -s ~/OneDrive/Sync/Zotero/storage ./Zotero/storage</span><br></pre></td></tr></table></figure><h3 id="other-app-without-configuration">Other app withoutconfiguration</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S steam stellarium visual-studio-code-bin zenmap wechat-beta-bwrap lx-music-desktop-bin calibre zotero kleopatra</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;manjaro-linux-setup&quot;&gt;Manjaro Linux Setup&lt;/h1&gt;
&lt;h2 id=&quot;install&quot;&gt;Install&lt;/h2&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;partition &lt;figure class=&quot;highlight pla</summary>
      
    
    
    
    
    <category term="manjaro" scheme="http://happylzyy.github.io/tags/manjaro/"/>
    
    <category term="linux" scheme="http://happylzyy.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>在Manjaro Linux上启用SecureBoot</title>
    <link href="http://happylzyy.github.io/2023/10/01/how-to-enable-secureboot-on-manjaro/"/>
    <id>http://happylzyy.github.io/2023/10/01/how-to-enable-secureboot-on-manjaro/</id>
    <published>2023-10-01T14:59:25.000Z</published>
    <updated>2024-04-06T14:24:02.008Z</updated>
    
    <content type="html"><![CDATA[<h4 id="什么是安全引导secureboot">什么是安全引导（SecureBoot）？</h4><p>Secure Boot是一项用于提高计算机启动安全性的技术。它的主要作用是在计算机启动过程中验证引导加载程序和操作系统内核的安全性和完整性。</p><p>Secure Boot 的工作原理是:</p><ol type="1"><li><p>在 UEFI固件中内置一个可信的公钥，用于验证引导加载程序和操作系统内核的数字签名。这些组件在发布前都要使用该公钥对应的私钥进行签名。</p></li><li><p>当计算机启动时，固件会检查引导加载程序的签名。如果签名有效，则加载引导加载程序并执行。如果签名无效，则停止启动过程。</p></li><li><p>引导加载程序再检查操作系统内核的签名。如果签名有效，则加载内核并启动操作系统。</p></li><li><p>整个启动过程中，任何一个组件的签名验证失败，都会停止启动，从而防止潜在的恶意软件入侵。</p></li></ol><p>启用 Secure Boot 可以防止 rootkit 和 bootkit 等病毒的感染。它是 UEFI固件的一个重要安全功能，现代个人计算机和服务器广泛采用。但也存在可能限制操作系统选择、增加软件兼容性问题等缺点。</p><h4 id="启用secureboot过程">启用SecureBoot过程</h4><p>Manjaro Linux 系统启用 Secure Boot 的过程包括：</p><ul><li>系统引导程序需要获得 Microsoft 的签名密钥才能让操作系统内核通过Secure Boot验证,但这是不可能的，因为微软不会这么做。因此替代方案是自行生成MOK密钥（MachineOwner Key）并替换 UEFI 固件的默认密钥；</li><li>按照GRUB的官方文档重新生成并安装GRUB，这一步坑比较多；</li><li>使用MOK密钥对引导程序进行签名。</li></ul><h4 id="mok密钥生成和导入">MOK密钥生成和导入</h4><p>在开始之前，先重启系统进入BIOS设置界面，设置SecureBoot进入SetupMode（不同的机器可能操作不一样）。</p><p>设置完成后重启进入系统，安装以下软件：</p><ul><li>sbctl：Secure Boot keymanager，这个工具使得密钥的生成和写入变得非常简单，它还拥有引导程序签名、pacmanhook等功能。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S sbctl</span><br></pre></td></tr></table></figure><p>查看SecureBoot状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sbctl status</span><br></pre></td></tr></table></figure><p>应该看到 sbctl 工具未安装并且SecureBoot已禁用。</p><p>生成MOK密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sbctl create-keys</span><br></pre></td></tr></table></figure><p>这将在默认位置生成MOK密钥。</p><p>将MOK密钥连带Microsoft密钥一起导入UEFI固件中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sbctl enroll-keys -m</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：如果不附带“-m”选项，将会导致Mincrosoft密钥丢失，使Windows无法启动，而且某些固件会使用Microsoft 密钥进行签名和验证，不验证设备可能会使它们变砖。</p><p>再次检查SecureBoot状态，此时sbctl会显示已安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sbctl status</span><br></pre></td></tr></table></figure><h4 id="重新构建grub">重新构建GRUB</h4><p>要使GRUB能在SecureBoot模式下启动，GRUB必须集成运行过程中所需的所有模块，可以参考<ahref="https://git.launchpad.net/~ubuntu-core-dev/grub/+git/ubuntu/tree/debian/build-efi-images?h=debian/2.06-2ubuntu12">ubuntu的grub生成脚本</a>来选择所需要的模块。然后，将这些模块记录成环境变量使用。</p><p>新建<code>\etc\grub_modules</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">touch</span> /etc/grub_modules</span><br></pre></td></tr></table></figure><p>打开文件，加入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">CD_MODULES=<span class="string">&quot;</span></span><br><span class="line"><span class="string">all_video</span></span><br><span class="line"><span class="string">boot</span></span><br><span class="line"><span class="string">btrfs</span></span><br><span class="line"><span class="string">cat</span></span><br><span class="line"><span class="string">chain</span></span><br><span class="line"><span class="string">configfile</span></span><br><span class="line"><span class="string">echo</span></span><br><span class="line"><span class="string">efifwsetup</span></span><br><span class="line"><span class="string">efinet</span></span><br><span class="line"><span class="string">ext2</span></span><br><span class="line"><span class="string">fat</span></span><br><span class="line"><span class="string">font</span></span><br><span class="line"><span class="string">gettext</span></span><br><span class="line"><span class="string">gfxmenu</span></span><br><span class="line"><span class="string">gfxterm</span></span><br><span class="line"><span class="string">gfxterm_background</span></span><br><span class="line"><span class="string">gzio</span></span><br><span class="line"><span class="string">halt</span></span><br><span class="line"><span class="string">help</span></span><br><span class="line"><span class="string">hfsplus</span></span><br><span class="line"><span class="string">iso9660</span></span><br><span class="line"><span class="string">jpeg</span></span><br><span class="line"><span class="string">keystatus</span></span><br><span class="line"><span class="string">loadenv</span></span><br><span class="line"><span class="string">loopback</span></span><br><span class="line"><span class="string">linux</span></span><br><span class="line"><span class="string">ls</span></span><br><span class="line"><span class="string">lsefi</span></span><br><span class="line"><span class="string">lsefimmap</span></span><br><span class="line"><span class="string">lsefisystab</span></span><br><span class="line"><span class="string">lssal</span></span><br><span class="line"><span class="string">memdisk</span></span><br><span class="line"><span class="string">minicmd</span></span><br><span class="line"><span class="string">normal</span></span><br><span class="line"><span class="string">ntfs</span></span><br><span class="line"><span class="string">part_apple</span></span><br><span class="line"><span class="string">part_msdos</span></span><br><span class="line"><span class="string">part_gpt</span></span><br><span class="line"><span class="string">password_pbkdf2</span></span><br><span class="line"><span class="string">png</span></span><br><span class="line"><span class="string">probe</span></span><br><span class="line"><span class="string">reboot</span></span><br><span class="line"><span class="string">regexp</span></span><br><span class="line"><span class="string">search</span></span><br><span class="line"><span class="string">search_fs_uuid</span></span><br><span class="line"><span class="string">search_fs_file</span></span><br><span class="line"><span class="string">search_label</span></span><br><span class="line"><span class="string">sleep</span></span><br><span class="line"><span class="string">smbios</span></span><br><span class="line"><span class="string">squash4</span></span><br><span class="line"><span class="string">test</span></span><br><span class="line"><span class="string">true</span></span><br><span class="line"><span class="string">video</span></span><br><span class="line"><span class="string">xfs</span></span><br><span class="line"><span class="string">zfs</span></span><br><span class="line"><span class="string">zfscrypt</span></span><br><span class="line"><span class="string">zfsinfo</span></span><br><span class="line"><span class="string">cpuid</span></span><br><span class="line"><span class="string">play</span></span><br><span class="line"><span class="string">tpm</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">GRUB_MODULES=<span class="string">&quot;<span class="variable">$CD_MODULES</span></span></span><br><span class="line"><span class="string">cryptodisk</span></span><br><span class="line"><span class="string">gcry_arcfour</span></span><br><span class="line"><span class="string">gcry_blowfish</span></span><br><span class="line"><span class="string">gcry_camellia</span></span><br><span class="line"><span class="string">gcry_cast5</span></span><br><span class="line"><span class="string">gcry_crc</span></span><br><span class="line"><span class="string">gcry_des</span></span><br><span class="line"><span class="string">gcry_dsa</span></span><br><span class="line"><span class="string">gcry_idea</span></span><br><span class="line"><span class="string">gcry_md4</span></span><br><span class="line"><span class="string">gcry_md5</span></span><br><span class="line"><span class="string">gcry_rfc2268</span></span><br><span class="line"><span class="string">gcry_rijndael</span></span><br><span class="line"><span class="string">gcry_rmd160</span></span><br><span class="line"><span class="string">gcry_rsa</span></span><br><span class="line"><span class="string">gcry_seed</span></span><br><span class="line"><span class="string">gcry_serpent</span></span><br><span class="line"><span class="string">gcry_sha1</span></span><br><span class="line"><span class="string">gcry_sha256</span></span><br><span class="line"><span class="string">gcry_sha512</span></span><br><span class="line"><span class="string">gcry_tiger</span></span><br><span class="line"><span class="string">gcry_twofish</span></span><br><span class="line"><span class="string">gcry_whirlpool</span></span><br><span class="line"><span class="string">luks</span></span><br><span class="line"><span class="string">lvm</span></span><br><span class="line"><span class="string">mdraid09</span></span><br><span class="line"><span class="string">mdraid1x</span></span><br><span class="line"><span class="string">raid5rec</span></span><br><span class="line"><span class="string">raid6rec</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>或者，通过已有的grub.cfg文件寻找所需的模块：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">cat</span> /boot/grub/grub.cfg | awk <span class="string">&#x27;/insmod/ &#123; print $2 &#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span></span><br></pre></td></tr></table></figure><p>保存文件并source：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/grub_modules</span><br></pre></td></tr></table></figure><p>重新构建安装GRUB到ESP分区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> grub-install --target=x86_64-efi --efi-directory=/boot/efi --modules=<span class="string">&quot;<span class="variable">$&#123;GRUB_MODULES&#125;</span>&quot;</span> --sbat /usr/share/grub/sbat.csv --disable-shim-lock</span><br></pre></td></tr></table></figure><p>target选项指明系统架构，efi-directory指明ESP分区挂载的位置，sbat是SecureBoot过程中GRUB需要的小节，disable-shim-lock选项解决了<code>shim_lock protocol not found</code>错误。</p><p>重新生成grub.cfg:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h4 id="对引导程序进行签名">对引导程序进行签名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sbctl sign -s /boot/efi/EFI/Manjaro/grubx64.efi</span><br></pre></td></tr></table></figure><p>重新检查efi文件签名情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sbctl verify</span><br></pre></td></tr></table></figure><p>除windows相关的引导文件外，其他efi都应该进行签名，例如黑苹果引导OpenCore文件的签名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> -i</span><br><span class="line">sbctl sign -s /boot/efi/EFI/OC/OpenCore.efi <span class="comment">#假设esp挂载点为/boot/efi/</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> /boot/efi/EFI/OC/Drivers/*; <span class="keyword">do</span></span><br><span class="line">sbctl sign -s <span class="variable">$file</span>;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> /boot/efi/EFI/OC/Tools/*; <span class="keyword">do</span></span><br><span class="line">sbctl sign -s <span class="variable">$file</span>;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="测试">测试</h4><p>签名完成后，进入BIOS将SecureBoot设为启用状态。</p><p>重启进入系统，检查SecureBoot状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sbctl status</span><br></pre></td></tr></table></figure><p>正常应该如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Installed:      ✓ sbctl is installed</span><br><span class="line">Owner GUID:     xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</span><br><span class="line">Setup Mode:     ✓ Disabled</span><br><span class="line">Secure Boot:    ✓ Enabled</span><br><span class="line">Vendor Keys:    microsoft</span><br></pre></td></tr></table></figure><p>然后，测试其他系统是否能够启动成功。</p><p>至此，SecureBoot启用完成。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;什么是安全引导secureboot&quot;&gt;什么是安全引导（SecureBoot）？&lt;/h4&gt;
&lt;p&gt;Secure Boot
是一项用于提高计算机启动安全性的技术。它的主要作用是在计算机启动过程中验证引导加载程序和操作系统内核的安全性和完整性。&lt;/p&gt;
&lt;p&gt;Secur</summary>
      
    
    
    
    
    <category term="manjaro" scheme="http://happylzyy.github.io/tags/manjaro/"/>
    
    <category term="secureboot" scheme="http://happylzyy.github.io/tags/secureboot/"/>
    
    <category term="bios" scheme="http://happylzyy.github.io/tags/bios/"/>
    
  </entry>
  
  <entry>
    <title>给hexo网站增加一些有趣的特效</title>
    <link href="http://happylzyy.github.io/2022/07/28/add-something-interesting/"/>
    <id>http://happylzyy.github.io/2022/07/28/add-something-interesting/</id>
    <published>2022-07-28T15:36:46.000Z</published>
    <updated>2022-07-28T16:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>给hexo网页添加一些有趣的js来增加乐趣。目前已经添加了两个：鼠标动态线条吸引跟随特效、鼠标文字弹出特效。</p><h4 id="鼠标动态线条吸引跟随">鼠标动态线条吸引跟随</h4><p>虽然没什么用甚至有些遮挡文字阅读，但是特效好看炫酷就完事了。</p><p>打开pure主题文件<code>themes/pure/layout/layout.ejs</code>，在<code>&lt;/body&gt;</code>标签前加一行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/canvas-nest.js/2.0.4/canvas-nest.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>保存修改，重新生成blog查看效果。</p><h4 id="鼠标文字弹出特效">鼠标文字弹出特效</h4><p>作为一名有理想有志向的爱国青年，社会主义核心价值观要牢记心中。</p><p>目前没有发现该特效js的托管CDN，只能全代码添加了。同样是pure主题文件<code>themes/pure/layout/layout.ejs</code>，在<code>&lt;/body&gt;</code>标签前加入以下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">jQuery</span>(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params">$</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;富强&quot;</span>, <span class="string">&quot;民主&quot;</span>, <span class="string">&quot;文明&quot;</span>, <span class="string">&quot;和谐&quot;</span>, <span class="string">&quot;自由&quot;</span>, <span class="string">&quot;平等&quot;</span>, <span class="string">&quot;公正&quot;</span> ,<span class="string">&quot;法治&quot;</span>, <span class="string">&quot;爱国&quot;</span>, <span class="string">&quot;敬业&quot;</span>, <span class="string">&quot;诚信&quot;</span>, <span class="string">&quot;友善&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> $i = $(<span class="string">&quot;&lt;span/&gt;&quot;</span>).<span class="title function_">text</span>(a[a_idx]);</span></span><br><span class="line"><span class="language-javascript">        a_idx = (a_idx + <span class="number">1</span>) % a.<span class="property">length</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> x = e.<span class="property">pageX</span>,</span></span><br><span class="line"><span class="language-javascript">        y = e.<span class="property">pageY</span>;</span></span><br><span class="line"><span class="language-javascript">        $i.<span class="title function_">css</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;z-index&quot;</span>: <span class="number">999999999999999999999999999999999999999999999999999999999999999999999</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;top&quot;</span>: y - <span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;left&quot;</span>: x,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;position&quot;</span>: <span class="string">&quot;absolute&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;font-weight&quot;</span>: <span class="string">&quot;bold&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ff6651&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($i);</span></span><br><span class="line"><span class="language-javascript">        $i.<span class="title function_">animate</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;top&quot;</span>: y - <span class="number">180</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;opacity&quot;</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="number">1500</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            $i.<span class="title function_">remove</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>特别地是，代码已经展示了如何自定义，有需要可以自己定制弹出文字。</p><p>保存文件，重新生成网页查看效果。</p><h4 id="网页宠物">网页宠物</h4><p>TODO</p><p>未完待续......</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;给hexo网页添加一些有趣的js来增加乐趣。目前已经添加了两个：鼠标动态线条吸引跟随特效、鼠标文字弹出特效。&lt;/p&gt;
&lt;h4 id=&quot;鼠标动态线条吸引跟随&quot;&gt;鼠标动态线条吸引跟随&lt;/h4&gt;
&lt;p&gt;虽然没什么用甚至有些遮挡文字阅读，但是特效好看炫酷就完事了。&lt;/p&gt;
&lt;p&gt;打</summary>
      
    
    
    
    
    <category term="javascript" scheme="http://happylzyy.github.io/tags/javascript/"/>
    
    <category term="hexo" scheme="http://happylzyy.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>ArchLinux中HMCL启动器提示缺少JavaFX的解决方法</title>
    <link href="http://happylzyy.github.io/2022/07/12/HMCL-missing-openjfx/"/>
    <id>http://happylzyy.github.io/2022/07/12/HMCL-missing-openjfx/</id>
    <published>2022-07-12T06:36:18.000Z</published>
    <updated>2023-09-17T11:52:24.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述">问题描述</h4><p>在Arch Linux系统中已经安装了以下默认版本的软件包：</p><ul><li>java-openjfx</li><li>jdk-openjdk</li><li>jre-openjdk</li><li>jre-openjdk-headless</li></ul><p>运行HMCL的时候会提示找不到JavaFX：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[org.jackhuang.hmcl.util.SelfDependencyPatcher.patch/INFO] Missing JavaFX dependencies, attempting to patch <span class="keyword">in</span> missing classes</span><br><span class="line">[org.jackhuang.hmcl.util.SelfDependencyPatcher.loadFromCache/INFO]  - Loading dependencies...</span><br><span class="line">[org.jackhuang.hmcl.util.SelfDependencyPatcher.patch/INFO]  - Done!</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>HMCL是一个很好用的minecraft启动器，它能够自动到网络上下载所需的依赖，但是系统本身已经安装了所需依赖，为什么不用呢？</p><p>据了解，JavaFX不再是OpenJDK的一部分了，因此用默认的OpenJDK运行jar会出现找不到JavaFX模块的问题。</p><p>解决的方法是手动添加JavaFX模块。由于某种未知的原因，ArchLinux中，java-openjfx包会将JavaFX库安装到OpenJDK的lib目录中，导致以下添加方式出现错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ java --module-path /usr/lib/jvm/java-20-openjdk/lib   --add-modules javafx.base,javafx.controls,javafx.fxml,javafx.graphics,javafx.media,javafx.swing,javafx.web -jar HMCL-3.5.5.jar</span><br><span class="line">Error occurred during initialization of boot layer</span><br><span class="line">java.lang.LayerInstantiationException: Package jdk.internal.jrtfs <span class="keyword">in</span> both module java.base and module jrt.fs</span><br></pre></td></tr></table></figure><p>这是因为，在顶级目录中不包含module-info.class的jar文件被视为自动模块自动加载，jrt.fs包含编译为JDK8的“jrt”文件系统提供程序的副本，最终结果是出现两个包含jdk.internal.jrtfs包（以及许多其他包）的冲突模块。解决冲突的方法是更加详细地描述添加模块的路径信息。</p><h4 id="解决方法">解决方法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/sh</span></span><br><span class="line"><span class="built_in">export</span> PATH_TO_FX=/usr/lib/jvm/java-20-openjdk/lib</span><br><span class="line"></span><br><span class="line">java --module-path <span class="variable">$PATH_TO_FX</span>/javafx.base.jar:<span class="variable">$PATH_TO_FX</span>/javafx.controls.jar:<span class="variable">$PATH_TO_FX</span>/javafx.fxml.jar:<span class="variable">$PATH_TO_FX</span>/javafx.graphics.jar:<span class="variable">$PATH_TO_FX</span>/javafx.media.jar:<span class="variable">$PATH_TO_FX</span>/javafx.swing.jar:<span class="variable">$PATH_TO_FX</span>/javafx.web.jar:<span class="variable">$PATH_TO_FX</span>/javafx-swt.jar --add-modules ALL-MODULE-PATH -jar HMCL-3.5.5.jar</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;问题描述&quot;&gt;问题描述&lt;/h4&gt;
&lt;p&gt;在Arch Linux系统中已经安装了以下默认版本的软件包：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;java-openjfx&lt;/li&gt;
&lt;li&gt;jdk-openjdk&lt;/li&gt;
&lt;li&gt;jre-openjdk&lt;/li&gt;
&lt;li&gt;jre-o</summary>
      
    
    
    
    
    <category term="hmcl" scheme="http://happylzyy.github.io/tags/hmcl/"/>
    
    <category term="javafx" scheme="http://happylzyy.github.io/tags/javafx/"/>
    
    <category term="archlinux" scheme="http://happylzyy.github.io/tags/archlinux/"/>
    
  </entry>
  
  <entry>
    <title>heroku反向代理gitalk解决403问题</title>
    <link href="http://happylzyy.github.io/2022/07/03/use-herokuapp-proxy-gitalk/"/>
    <id>http://happylzyy.github.io/2022/07/03/use-herokuapp-proxy-gitalk/</id>
    <published>2022-07-03T13:01:09.000Z</published>
    <updated>2022-07-03T14:26:19.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="gitalk-403-问题">Gitalk 403 问题</h4><p>Gitalk评论系统在登录github时显示<code>error: request failed with status code 403</code>。这是因为gitalk 在访问 github时为了解决跨域问题而使用了一个反向代理，这个默认的反向代理近期限制了访问，所以无法使用了。</p><p>在网上找了好几个反向代理地址，但是都不好用，因此决定自己建一个反向代理服务器。教程分为两个部分，第一部分是服务器端的配置，第二部分是hexo网站的配置。</p><h4 id="服务器端">服务器端</h4><p>这里用到了开源项目<ahref="https://github.com/Rob--W/cors-anywhere">CORSAnywhere</a>，这个项目可以直接在heroku上运行。</p><h5 id="注册heroku帐号">注册heroku帐号</h5><p>首先需要到<ahref="https://www.heroku.com/">heroku官网</a>注册帐号，注册和验证的过程可能需要用到不可描述的工具。</p><h5 id="下载安装hero-cli">下载安装Hero CLI</h5><p>Hero CLI需要用到git，如果没有装git，请看这里</p><ul><li><ahref="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git">Gitinstallation</a></li><li><ahref="https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup">First-timeGit setup</a></li></ul><p>在Linux上安装<code>heroku-cli</code>比较简单，只需要运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://cli-assets.heroku.com/install.sh | sh</span><br></pre></td></tr></table></figure><p>对于arch系Linux，还可以用AUR安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S hero-cli</span><br></pre></td></tr></table></figure><h5 id="下载安装cors-anywhere">下载安装CORS Anywhere</h5><p>运行git clone</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Rob--W/cors-anywhere.git</span><br></pre></td></tr></table></figure><p>进入cors-anywhere目录，安装依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> cors-anywhere</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><h5 id="部署cors-anywhere">部署CORS Anywhere</h5><p>登录heroku-cli</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heroku login -i</span><br></pre></td></tr></table></figure><p>在CORS Anywhere目录下创建新的app</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hero create [app名称] <span class="comment">#app名称留空会使用随机名称</span></span><br></pre></td></tr></table></figure><p>将CORS Anywhere推送到heroku上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push heroku master</span><br></pre></td></tr></table></figure><p>这时候安装部署完成，可以看到部署完成后的herokuapp地址，复制下来一会儿要用到。</p><h4 id="hexo配置">Hexo配置</h4><h5 id="主题文件修改">主题文件修改</h5><p>不同的主题可能有不同的修改方式，这里修改的是<ahref="https://github.com/cofess/hexo-theme-pure">pure</a>主题。主要做了以下更改：</p><ul><li>将gitalk修改为最新版本</li><li>修改<code>var gitalk</code>增加<code>proxy</code>值</li></ul><p>打开<code>/layout/_common/head.ejs</code>文件，找到</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/gitalk@1.4.0/dist/gitalk.min.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/gitalk@1.7.2/dist/gitalk.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样Pure主题可以用到最新的gitalk版本。</p><p>打开<code>/layout/_script/_comment/gitalk.ejs</code>，修改两处</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@@ -1,6 +1,6 @@</span><br><span class="line"> &lt;% if (typeof(script) !== &#x27;undefined&#x27; &amp;&amp; script) &#123; %&gt;</span><br><span class="line">   <span class="comment">&lt;!-- &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt; --&gt;</span></span><br><span class="line">-  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/gitalk@1.6.2/dist/gitalk.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">+  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/gitalk@1.7.2/dist/gitalk.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/blueimp-md5@2.10.0/js/md5.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">var</span> gitalk = <span class="keyword">new</span> <span class="title class_">Gitalk</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">@@ -<span class="number">12</span>,<span class="number">7</span> +<span class="number">12</span>,<span class="number">8</span> @@</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">id</span>: <span class="title function_">md5</span>(location.<span class="property">pathname</span>),</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">distractionFreeMode</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">language</span>: <span class="string">&#x27;&lt;%= theme.comment.gitalk.language %&gt;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">-    <span class="attr">enableHotKey</span>: <span class="string">&#x27;&lt;%= theme.comment.gitalk.enableHotKey %&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">+    <span class="attr">enableHotKey</span>: <span class="string">&#x27;&lt;%= theme.comment.gitalk.enableHotKey %&gt;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">+    <span class="attr">proxy</span>: <span class="string">&#x27;&lt;%= theme.comment.gitalk.proxy %&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript">   gitalk.<span class="title function_">render</span>(<span class="string">&#x27;comments&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>gitalk@1.6.2</code>改成<code>gitalk@1.7.2</code>以使用最新版本gitalk，<code>var gitalk</code>变量增加一条内容<code>proxy: '&lt;%= theme.comment.gitalk.proxy %&gt;'</code>，注意上一条内容后面加<code>,</code></p><h5 id="修改主题配置">修改主题配置</h5><p>在pure主题配置文件中增加proxy地址，不同的主题gitalk位置可能不同。</p><p>打开<code>_config.pure.yaml</code>文件，在gitalk里增加proxy地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span> <span class="comment"># gitalk. https://gitalk.github.io/</span></span><br><span class="line">    <span class="attr">owner:</span> <span class="comment">#必须. GitHub repository 所有者，可以是个人或者组织。</span></span><br><span class="line">    <span class="attr">admin:</span> <span class="comment">#必须. GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。</span></span><br><span class="line">    <span class="attr">repo:</span>  <span class="comment">#必须. GitHub repository.</span></span><br><span class="line">    <span class="attr">ClientID:</span>  <span class="comment">#必须. GitHub Application Client ID.</span></span><br><span class="line">    <span class="attr">ClientSecret:</span>  <span class="comment">#必须. GitHub Application Client Secret.</span></span><br><span class="line">    <span class="attr">proxy:</span> <span class="string">https://[heroku</span> <span class="string">app</span> <span class="string">地址]/https://github.com/login/oauth/access_token</span></span><br></pre></td></tr></table></figure><p>这样Hexo就修改完了，重新生成和部署Hexo站点到Github，尝试登录Gitalk。</p><h4 id="总结">总结</h4><p>Gitalk 403问题是默认的反向代理地址失效造成的，通过使用heroku自建反向代理服务解决Gitalk403问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;gitalk-403-问题&quot;&gt;Gitalk 403 问题&lt;/h4&gt;
&lt;p&gt;Gitalk评论系统在登录github时显示&lt;code&gt;error: request failed with status code 403&lt;/code&gt;。这是因为
gitalk 在访问 g</summary>
      
    
    
    
    
    <category term="heroku" scheme="http://happylzyy.github.io/tags/heroku/"/>
    
    <category term="gitalk" scheme="http://happylzyy.github.io/tags/gitalk/"/>
    
    <category term="proxy" scheme="http://happylzyy.github.io/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>R720-15IKBN MSR 0xE2 CFG Lock 解锁</title>
    <link href="http://happylzyy.github.io/2022/07/03/how-to-unlock-cfg-lock/"/>
    <id>http://happylzyy.github.io/2022/07/03/how-to-unlock-cfg-lock/</id>
    <published>2022-07-03T06:15:11.000Z</published>
    <updated>2022-07-03T06:24:49.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="什么是-msr-cfg-lock-解锁">什么是 MSR CFG Lock 解锁？</h4><p>MSR（Model SpecificRegister）是x86架构中的概念，指的是在x86架构处理器中，一系列用于控制CPU运行、功能开关、调试、跟踪程序执行、监测CPU性能等方面的寄存器。</p><p>大多数UEFI主板厂家，锁定了MSR寄存器的第15位为只读，也就是MSR 0xE2Locking（BIOS 中叫CFGLock）。苹果macOS系统的电源管理、CPU的P-state、C-state放在MSR寄存器里，MSR0xE2被锁定为只读后，macOS系统的电源管理驱动扩展AppleIntelCPUPowerManagement一旦尝试去写入数据，系统就会马上崩溃。有些主板上有选项“CFGLock”，其说明内容为”关闭或开启MSR0xE2″，可以手动开关，有些主板则屏蔽了这个选项。当使用黑苹果时，必须解锁MSR0xE2，否则无法使用苹果的原生电源管理。</p><p>联想等一些 OEM设置了BIOS内部的变量，也就是说固化到了BIOS的固件代码里，如果不对 BIOS进行物理修改就无法解锁它，对于这种情况，需要修改BIOS才能解锁CFGLock。Lenovo R720-15IKBN就属于上述情况，因此要对BIOS进行修改。</p><p><strong>刷机有风险，搞机须谨慎！失败会造成电脑变砖，没有救砖技术请不要尝试！本文仅供参考，对于读者自己造成的损坏不承担任何责任！</strong></p><h4 id="环境准备">环境准备</h4><ul><li><strong>插了稳定交流电源</strong>的Lenovo R720-15IKBN笔记本电脑</li><li>Windows 10，因为大部分操作都在Win环境下进行</li><li>macOS与OpenCore</li><li>一个格式化文件系统为FAT32的U盘</li><li>安静的没有人打扰您的环境</li></ul><h4 id="工具准备">工具准备</h4><ul><li><p>Lenovo 官方 <code>4KCN27WW</code>版 BIOS</p><p>联想官方BIOS通常具有写保护措施，而27版BIOS没有写保护因此可以进行修改，BIOS降级程序可在官网输入主机编号后寻找下载到。</p><p>下载地址：https://newsupport.lenovo.com.cn/</p></li><li><p>Intel CSME System Tools</p><p>用于Dump BIOS 固件，根据不同的平台选择不同的版本，这里选择v11r37版。</p><p>下载地址：https://comsystem-tlt.ru/obzori/me-txe-region</p></li><li><p>UEFITool</p><p>查找BIOS中相关变量（字符串）的工具。</p><p>下载地址：https://github.com/LongSoft/UEFITool/releases</p></li><li><p>IRFExtractor</p><p>将UEFITool得到的PE32 image转换成文本的工具。</p><p>下载地址：https://github.com/LongSoft/Universal-IFR-Extractor/releases</p></li><li><p>easyUEFI或Bootice</p><p>用于修改UEFI启动项。</p></li></ul><h4 id="bios-降级">BIOS 降级</h4><p>进入UEFI BIOS 设置，将BIOS BackFlash设为Enabled，允许BIOS回滚刷新；</p><p>重启进入Windows，运行从官网下载的27版BIOS降级程序，安装完成后系统自动重启，开始降级过程。<strong>注意在降级过程中一定不要断开电源！</strong>BIOS刷写成功后，电脑会自动重启数次，属于正常现象，不要断电源。</p><p>刷写后可能无法进入Win系统，重新进入UEFIBIOS设置，关闭安全启动，将SATA控制器工作模式设置为AHCI，保存设置后重启就能进入系统。</p><h4 id="提取主板bios">提取主板BIOS</h4><p>进入系统后，打开<code>Intel CSME System Tools v11 r37/Flash Programming Tool/WIN64</code>，新建文本文档，输入以下代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /d %~dp0</span><br><span class="line">fptw64.exe -bios -d backup.fd</span><br></pre></td></tr></table></figure><p>保存后修改文件扩展名为<code>.cmd</code>，右键以管理员身份运行，提取主板BIOS，提取后的文件存储在同目录下，名字为<code>backup.fd</code>。</p><h4 id="提取bios信息">提取BIOS信息</h4><p>打开UEFITool，菜单栏选择<code>File &gt; Open image file...</code>，选择上一步提取出的<code>backup.fd</code>。</p><p>菜单栏选择<code>Action &gt; Search...</code>，在弹出的对话框中选择<code>Text</code>，输入<code>CFG Lock</code>，搜索的结果在下方显示，双击<code>Unicode text "CFG Lock" in DriverSampleDxe/PE32 image section at header-offset 496F4h</code>定位到CFGLock所在位置。</p><p>在定位到的位置右击<code>PE32 image section</code>，选择<code>Extarct as is...</code>，将PE32image文件保存。</p><p>接下来，我们需要把PE32 image转换成我们能读懂的信息。</p><p>打开IFRExtractor，直接点击右侧加载按钮，打开上一步的PE32文件，再点击Extract，就会生成txt文本，并保存到相应的文件夹。</p><h4 id="寻找需要的偏移量">寻找需要的偏移量</h4><p>打开转换的txt文件，搜索字符串<code>CFG Lock</code>，定位到CFGLock位置，如下所示，不同机器可能不同：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0x9B0B4 Form: View/Configure CPU Lock Options, FormId: 0x1012 &#123;01 86 12 10 C3 00&#125;</span><br><span class="line">0x9B0BA One Of: CFG Lock, VarStoreInfo (VarOffset/VarName): 0x3C, VarStore: 0x3, QuestionId: 0x145, Size: 1, Min: 0x0, Max 0x1, Step: 0x0 &#123;05 91 66 02 67 02 45 01 03 00 3C 00 10 10 00 01 00&#125;</span><br><span class="line">0x9B0CB One Of Option: Disabled, Value (8 bit): 0x0 &#123;09 07 04 00 00 00 00&#125;</span><br><span class="line">0x9B0D2 One Of Option: Enabled, Value (8 bit): 0x1 (default) &#123;09 07 03 00 30 00 01&#125;</span><br><span class="line">0x9B0D9 End One Of &#123;29 02&#125;</span><br></pre></td></tr></table></figure><p>其中<code>CFG Lock, VarStoreInfo (VarOffset/VarName): 0x3C, VarStore: 0x3</code>就是我们要找的。</p><p><code>VarStoreInfo</code>的值是CFGLock这个选项的地址，也可以说其在BIOS中的偏移量。后面的<code>VarStore</code>是BIOS默认值，此处为<code>0x3</code>。而我们想要解锁它就需要把它修改成<code>0x0</code>，即下面对应的DisabledOption，就是需要把<code>0x3C</code>这个偏移地址上的数值修改为<code>0x0</code>。</p><p><strong>请注意，可变偏移量不仅对于每个主板是唯一的，甚至对于每个固件版本也是唯一的。所以读者应该自己寻找偏移量，切勿在不检查的情况下尝试使用本文中的偏移量。</strong></p><h4 id="修改bios偏移量">修改BIOS偏移量</h4><p>这里使用的工具是RU.efi。</p><p>打开U盘，新建<code>EFI/BOOT/</code>目录，将RU.efi重命名为<code>BOOTX64.efi</code>放到该目录下。</p><p>重启系统，选择从U盘启动，按任意键即可进入RU工具。</p><ul><li>进入后按 <kbd>alt</kbd>+<kbd>=</kbd> 切换进 "ACPI Variable"；</li><li>用<kbd>PageUp</kbd>/<kbd>PageDown</kbd>/上下方向键找到"CPUSetup"；</li><li>回车进入，然后用上下左右方向键找到对应的地址（本文中是<code>0x3C</code>，那么就是纵坐标<code>0030</code>，横坐标<code>0C</code>的位置）；</li><li>回车，输入<code>0</code>就可以看到它变成了0，再按回车确认；</li><li>按<kbd>Ctrl</kbd>+<kbd>W</kbd>来保存，保存的时候屏幕上会直接显示UpdatedOK，这说明写入成功；</li><li>按<kbd>Alt</kbd>+<kbd>Q</kbd>来退出，然后即可回到引导进入系统了，此时CFG已经解锁。</li></ul><h4 id="检查解锁情况">检查解锁情况</h4><p>通过 ControlMsrE2检查，将OpenCore自带的<code>Tools/ControlMsrE2.efi</code>加入到Config.plist配置文件中。接下来，启动 OpenCore并选择ControlMsrE2.efi条目。这应该会显示以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This firmware has UNLOCKED MSR 0xE2 register!</span><br></pre></td></tr></table></figure><p>说明MSR 0xE2解锁成功。</p><h4 id="修改opencore配置文件">修改OpenCore配置文件</h4><p>在KernelOption中取消<code>AppleCpuPmCfgLock</code>和<code>AppleXcpmCfgLock</code>的勾选。</p><p>恭喜您完成MSR CFG Lock解锁全过程！现在您将拥有正确的 CPU电源管理。</p><h4 id="参考资料">参考资料</h4><ul><li><a href="https://www.zdynb.cn/2020/jie-suo-cfg-lock.html">解锁CFGLock | 张登友的博客 (zdynb.cn)</a></li><li><ahref="https://bbs.pcbeta.com/viewthread-1899638-1-1.html">修复CFG锁-远景论坛-微软极客社区(pcbeta.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/121655468">从Clover到OC（重难点：Insyde BIOS 解锁CFG Lock） - 知乎 (zhihu.com)</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;什么是-msr-cfg-lock-解锁&quot;&gt;什么是 MSR CFG Lock 解锁？&lt;/h4&gt;
&lt;p&gt;MSR（Model Specific
Register）是x86架构中的概念，指的是在x86架构处理器中，一系列用于控制CPU运行、功能开关、调试、跟踪程序执行、监</summary>
      
    
    
    
    
    <category term="bios" scheme="http://happylzyy.github.io/tags/bios/"/>
    
    <category term="hackintosh" scheme="http://happylzyy.github.io/tags/hackintosh/"/>
    
  </entry>
  
  <entry>
    <title>Pure主题使用Katex渲染Latex公式</title>
    <link href="http://happylzyy.github.io/2022/07/03/how-to-render-latex-equation-code-with-katex/"/>
    <id>http://happylzyy.github.io/2022/07/03/how-to-render-latex-equation-code-with-katex/</id>
    <published>2022-07-03T05:57:00.000Z</published>
    <updated>2022-07-03T06:03:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>Pure主题的数学公式功能并不完善，为了支持Katex，对Pure主题和Hexo配置做了大量修改。</p><h4 id="hexo配置修改">Hexo配置修改</h4><ul><li><p>Hexo自带的渲染插件不支持数学公式，因此先卸载自带的渲染插件</p><p><code>npm uninstall hexo-renderer-marked --save</code></p></li><li><p>删除其他任何与数学公式有关的插件，如<code>hexo-math</code>、<code>markdown-it-katex</code>等等；</p></li><li><p>删除<code>_config.yaml</code>配置文件里与数学公式有关的部分；</p></li><li><p>安装新的渲染插件</p><p><code>npm install hexo-renderer-pandoc --save</code></p></li><li><p>安装依赖的软件包pandoc，打开终端运行<code>yay -Syu pandoc</code>；</p></li></ul><h4 id="pure主题修改">Pure主题修改</h4><p>打开<code>head.ejs</code>文件，该文件位于<code>themes/pure/layout/_common/</code>，找到</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (page.mathjax) &#123; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/katex@0.9.0/dist/katex.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (page.katex) &#123; %&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-Xi8rHCmBmhbuyyhbI88391ZKP2dmfnOl4rT9ZfRI7mLTdk1wblIUnrIq35nqwEvC&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- The loading of KaTeX is deferred to speed up page rendering --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-X/XCfMm41VSsqRNQgDerQczD69XqmjOOOwYQvr/uuC+j4OPoNhVgjdGFwhvN02Ja&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- To automatically render math in text elements, include the auto-render extension: --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/contrib/auto-render.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-+XBljXPPiv+OzfbB3cVmLHf4hdUFHlWNZN5spNQ7rmHTXpd7WvJum6fIACpNNfIR&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">onload</span>=<span class="string">&quot;renderMathInElement(document.body);&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>删除<code>themes/pure/layout/_script/mathjax.ejs</code>文件。</p><h4 id="启用数学公式">启用数学公式</h4><p>需要写公式的文章在开头加入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">katex:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="来测试一下公式渲染吧">来测试一下公式渲染吧！</h3><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;cases&#125;</span><br><span class="line"><span class="keyword">\nabla</span><span class="keyword">\times</span><span class="keyword">\vec</span>&#123;E&#125;=-<span class="keyword">\frac</span>&#123;<span class="keyword">\partial</span><span class="keyword">\vec</span>&#123;B&#125;&#125;&#123;<span class="keyword">\partial</span> t&#125;<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\nabla</span><span class="keyword">\times</span><span class="keyword">\vec</span>&#123;H&#125;=<span class="keyword">\vec</span>&#123;J<span class="built_in">_</span>v&#125;+<span class="keyword">\frac</span>&#123;<span class="keyword">\partial</span><span class="keyword">\vec</span>&#123;D&#125;&#125;&#123;<span class="keyword">\partial</span> t&#125;<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\nabla</span><span class="keyword">\cdot</span><span class="keyword">\vec</span>&#123;D&#125;=<span class="keyword">\rho</span><span class="built_in">_</span>v<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\nabla</span><span class="keyword">\cdot</span><span class="keyword">\vec</span>&#123;B&#125;=0</span><br><span class="line"><span class="keyword">\end</span>&#123;cases&#125;<span class="keyword">\quad</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;cases&#125;</span><br><span class="line"><span class="keyword">\vec</span>&#123;D&#125;=<span class="keyword">\epsilon</span><span class="keyword">\vec</span>&#123;E&#125;<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\vec</span>&#123;B&#125;=<span class="keyword">\mu</span><span class="keyword">\vec</span>&#123;H&#125;<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\vec</span>&#123;J<span class="built_in">_</span>v&#125;=<span class="keyword">\sigma</span><span class="keyword">\vec</span>&#123;E&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;cases&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></table></figure><p>渲染为 <span class="math display">\[\begin{cases}\nabla\times\vec{E}=-\frac{\partial\vec{B}}{\partial t}\\\nabla\times\vec{H}=\vec{J_v}+\frac{\partial\vec{D}}{\partial t}\\\nabla\cdot\vec{D}=\rho_v\\\nabla\cdot\vec{B}=0\end{cases}\quad\begin{cases}\vec{D}=\epsilon\vec{E}\\\vec{B}=\mu\vec{H}\\\vec{J_v}=\sigma\vec{E}\end{cases}\]</span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Pure主题的数学公式功能并不完善，为了支持Katex，对Pure主题和Hexo配置做了大量修改。&lt;/p&gt;
&lt;h4 id=&quot;hexo配置修改&quot;&gt;Hexo配置修改&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hexo自带的渲染插件不支持数学公式，因此先卸载自带的渲染插件&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
    <category term="katex" scheme="http://happylzyy.github.io/tags/katex/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo建立个人Blog站</title>
    <link href="http://happylzyy.github.io/2021/08/06/how-to-build-blog-with-hexo/"/>
    <id>http://happylzyy.github.io/2021/08/06/how-to-build-blog-with-hexo/</id>
    <published>2021-08-05T17:41:30.000Z</published>
    <updated>2024-08-09T14:45:29.679Z</updated>
    
    <content type="html"><![CDATA[<p>本文章记录了本博客的建立过程，以下所有操作是在ManjaroLinux上进行的，其他未尽事宜请见<ahref="https://hexo.io/zh-cn/docs/">官方文档</a>。</p><h4 id="hexo简介">Hexo简介</h4><p>Hexo是一个快速、简洁且高效的博客框架；</p><p>可以使用 Markdown 来排版和写文章；</p><p>生成的网页是静态页面的，特别适合用来白嫖 GitHub Pages😈。</p><h4 id="安装环境">安装环境</h4><p>Hexo运行所需的软件和安装命令如下：</p><ul><li><p>Node.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -Sy nodejs npm</span><br></pre></td></tr></table></figure><p>由于某些不可描述的原因，npm需要换成国内的淘宝源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>Git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -Sy git</span><br></pre></td></tr></table></figure></li></ul><h4 id="hexo站点初始化">Hexo站点初始化</h4><p>建立一个空文件夹并进入这个文件夹，这将成为博客站的主目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir hexo_blog &amp;&amp; cd hexo_blog</span><br></pre></td></tr></table></figure><p>在该目录内安装Hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure><p>进行hexo初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo init</span><br></pre></td></tr></table></figure><p>此时，一个Hexo驱动的博客站就建好了。要查看刚刚建好的博客，可以执行<code>npx hexo clean &amp;&amp; npx hexo g &amp;&amp; npx hexo s</code>，按住<kbd>Ctrl</kbd>建点击生成的网址即可打开。</p><h4 id="hexo管理">Hexo管理</h4><p>这里列举几个常用的Hexo命令</p><ul><li><p>清理生成的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo clean</span><br></pre></td></tr></table></figure></li><li><p>生成文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo generate</span><br></pre></td></tr></table></figure></li><li><p>进行预览</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo server</span><br></pre></td></tr></table></figure></li><li><p>新建文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo new <span class="string">&quot;NewPostName&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="hexo主题修改">Hexo主题修改</h4><p>Hexo有很多主题可供选择，在官网的<ahref="https://hexo.io/themes/index.html">主题站</a>挑选，这里选择<ahref="https://github.com/cofess/hexo-theme-pure">pure主题</a>。</p><p>在博客站主目录下克隆主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure><p>安装pure主题的依赖包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br><span class="line">npm install hexo-generator-json-content --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p>复制一份主题配置样例到博客主目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp themes/pure/_config.yml _config.pure.yml</span><br></pre></td></tr></table></figure><p>修改博客配置<code>_config.yml</code>，将<code>themes: landscape</code>修改为<code>themes: pure</code>。</p><p>根据<ahref="https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md#%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE">说明文档</a>对主题配置进行相关修改。</p><h4 id="hexo部署">Hexo部署</h4><p>登录自己的GitHub，新建一个Repository，名字为<code>[GitHub用户名].github.io</code>。</p><p>在Repository的Setting中勾选GitHub Pages功能。</p><p>打开博客配置文件<code>_config.yml</code>修改博客网站的描述部分</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Someone&#x27;s</span> <span class="string">Blog</span>  <span class="comment"># 博客标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span>  <span class="comment"># 次标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span>  <span class="comment">#网站描述</span></span><br><span class="line"><span class="attr">keywords:</span>  <span class="comment"># 关键词</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">me</span>  <span class="comment"># 作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span>  <span class="comment"># 博客网站语言，英语en，中文zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span>  <span class="comment"># 时区</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改站点网址部分</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://[Github用户名].github.io</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改部署部分</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span> <span class="comment"># 部署方式为git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:happylzyy/happylzyy.github.io.git</span> <span class="comment"># Repository远程仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment"># 部署到远程分支master</span></span><br></pre></td></tr></table></figure><p>配置完成后，运行<code>npx hexo clean &amp;&amp; npx hexo g</code>重新生成博客，再运行<code>npx hexo deploy</code>即可部署到GitHub上。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文章记录了本博客的建立过程，以下所有操作是在Manjaro
Linux上进行的，其他未尽事宜请见&lt;a
href=&quot;https://hexo.io/zh-cn/docs/&quot;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;hexo简介&quot;&gt;Hexo简介&lt;/h4&gt;
&lt;p&gt;Hexo是</summary>
      
    
    
    
    
    <category term="hexo" scheme="http://happylzyy.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
